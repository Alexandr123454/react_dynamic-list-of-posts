{"version":3,"sources":["api/API_DATA.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","components/SearchField.js","App.js","index.js"],"names":["loadPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePosts","posts","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","loadUsers","_ref2","_callee2","responseUsers","users","_context2","loadComments","_ref3","_callee3","responseComments","comments","_context3","User","userItem","react_default","createElement","className","name","username","email","Comment","body","CommentList","map","comment","components_Comment","Post","state","showComment","_this2","post","props","components_User","user","title","tabIndex","role","onKeyDown","onClick","setState","components_CommentList","React","Component","PostList","filtredPosts","components_Post","key","id","SearchField","search","updateSearch","type","value","onChange","placeholder","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","LoadData","postsWithCommentsAndUsers","isLoading","objectSpread","filter","postId","find","userId","isLoaded","event","target","substr","toLowerCase","indexOf","components_SearchField","components_PostList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cbf4fe65.chunk.js","sourcesContent":["\nexport const loadPosts = async() => {\n  const urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n  const responsePosts = await fetch(urlPosts);\n  const posts = await responsePosts.json();\n\n  return posts;\n};\n\nexport const loadUsers = async() => {\n  const urlUsers = 'https://jsonplaceholder.typicode.com/users';\n  const responseUsers = await fetch(urlUsers);\n  const users = await responseUsers.json();\n\n  return users;\n};\n\nexport const loadComments = async() => {\n  const urlComments = 'https://jsonplaceholder.typicode.com/comments';\n  const responseComments = await fetch(urlComments);\n  const comments = await responseComments.json();\n\n  return comments;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userItem }) => (\n  <div className=\"user_information\">\n    <p>\n      <b>Name</b>\n      {' '}\n      {userItem.name}\n    </p>\n    <p>\n      <b>Nick name</b>\n      {' '}\n      {userItem.username}\n    </p>\n    <p>\n      <b>Email</b>\n      {' '}\n      {userItem.email}\n    </p>\n  </div>\n);\n\nUser.propTypes = {\n  userItem: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comments }) => (\n  <p>\n    <div className=\"comments\">\n      <br />\n      <b>Comment</b>\n      {' '}\n      {comments.body}\n    </div>\n  </p>\n);\n\nComment.propTypes = {\n  comments: PropTypes.shape({\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <p>\n    {comments.map(comment => <Comment comments={comment} />)}\n  </p>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object])).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  state = {\n    showComment: false,\n  }\n\n  render() {\n    const { post } = this.props;\n\n    return (\n      <li\n        className=\"post_list\"\n\n      >\n        <User userItem={post.user} />\n        <p className=\"post_title\">\n          <b>Title</b>\n          {' '}\n          {post.title}\n        </p>\n\n        <p className=\"post_body\">{post.body}</p>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onKeyDown={() => {}}\n          className=\"show_comments\"\n          onClick={() => this.setState(state => ({\n            showComment: !state.showComment,\n          }))}\n        >\n          <p className=\"view-comments\">View comments</p>\n        </div>\n        {\n          this.state.showComment\n            ? <CommentList comments={post.comments} />\n            : ''\n        }\n      </li>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    user: PropTypes.string,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ filtredPosts }) => (\n  <ul>\n    {filtredPosts.map(post => (\n      <div>\n        <Post key={post.id} post={post} />\n      </div>\n    ))\n    }\n  </ul>\n);\n\nPostList.propTypes = {\n  filtredPosts: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object])).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchField = ({ search, updateSearch }) => (\n  <div className=\"search_list\">\n    <input\n      className=\"search_field\"\n      type=\"text\"\n      value={search}\n      onChange={updateSearch}\n      placeholder=\"Search\"\n    />\n  </div>\n);\n\nSearchField.propTypes = {\n  updateSearch: PropTypes.func.isRequired,\n  search: PropTypes.string.isRequired,\n};\n\nexport default SearchField;\n","import React from 'react';\nimport { loadPosts, loadUsers, loadComments } from './api/API_DATA';\nimport './styles/App.css';\nimport PostList from './components/PostList';\nimport SearchField from './components/SearchField';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      isLoaded: false,\n      isLoading: false,\n      search: '',\n    };\n  }\n\n  LoadData = async() => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const users = await loadUsers();\n    const posts = await loadPosts();\n    const comments = await loadComments();\n\n    const postsWithCommentsAndUsers = posts.map(post => ({\n      ...post,\n      comments: comments.filter(comment => post.id === comment.postId),\n      user: users.find(user => user.id === post.userId),\n    }));\n\n    this.setState({\n      posts: postsWithCommentsAndUsers,\n      isLoaded: true,\n      isLoading: false,\n    });\n  }\n\n  updateSearch = (event) => {\n    this.setState({\n      search: event.target.value.substr(0, 100),\n    });\n  }\n\n  render() {\n    const filtredPosts = this.state.posts.filter(post => (\n      post.body.toLowerCase()\n        .indexOf(this.state.search.toLowerCase()) !== -1\n      || post.title.toLowerCase()\n        .indexOf(this.state.search.toLowerCase()) !== -1\n    ));\n\n    if (this.state.isLoaded) {\n      return (\n        <div className=\"App\">\n          <SearchField\n            search={this.state.search}\n            updateSearch={this.updateSearch}\n          />\n          <PostList filtredPosts={filtredPosts} />\n        </div>\n      );\n    }\n    return (\n      <div className=\"button_load\">\n        <button className=\"button\" onClick={this.LoadData} type=\"button\">\n          {this.state.isLoading ? 'Loading...' : 'Load'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}